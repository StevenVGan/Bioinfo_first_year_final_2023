---
title: "First_year_exam_Bioinfo"
author: "Diwen (Steven) Gan"
format: html
---

# For Q2

```{r}
wt <- "MAKATSGAAGLRLLLLLLLPLLGKVALGLYFSRDAYWEKLYVDQAAGTPLLYVHALRDAPEEVPSFRLGQHLYGTYRTRLHENNWICIQEDTGLLYLNRSLDHSSWEKLSVRNRGFPLLTVYLKVFLSPTSLREGECQWPGCARVYFSFFNTSFPACSSLKPRELCFPETRPSFRIRENRPPGTFHQFRLLPVQFLCPNISVAYRLLEGEGLPFRCAPDSLEVSTRWALDREQREKYELVAVCTVHAGAREEVVMVPFPVTVYDEDDSAPTFPAGVDTASAVVEFKRKEDTVVATLRVFDADVVPASGELVRRYTSTLLPGDTWAQQTFRVEHWPNETSVQANGSFVRATVHDYRLVLNRNLSISENRTMQLAVLVNDSDFQGPGAGVLLLHFNVSVLPVSLHLPSTYSLSVSRRARRFAQIGKVCVENCQAFSGINVQYKLHSSGANCSTLGVVTSAEDTSGILFVNDTKALRRPKCAELHYMVVATDQQTSRQAQAQLLVTVEGSYVAEEAGCPLSCAVSKRRLECEECGGLGSPTGRCEWRQGDGKGITRNFSTCSPSTKTCPDGHCDVVETQDINICPQDCLRGSIVGGHEPGEPRGIKAGYGTCNCFPEEEKCFCEPEDIQDPLCDELCRTVIAAAVLFSFIVSVLLSAFCIHCYHKFAHKPPISSAEMTFRRPAQAFPVSYSSSGARRPSLDSMENQVSVDAFKILEDPKWEFPRKNLVLGKTLGEGEFGKVVKATAFHLKGRAGYTTVAVKMLKENASPSELRDLLSEFNVLKQVNHPHVIKLYGACSQDGPLLLIVEYAKYGSLRGFLRESRKVGPGYLGSGGSRNSSSLDHPDERALTMGDLISFAWQISQGMQYLAEMKLVHRDLAARNILVAEGRKMKISDFGLSRDVYEEDSYVKRSQGRIPVKWMAIESLFDHIYTTQSDVWSFGVLLWEIVTLGGNPYPGIPPERLFNLLKTGHRMERPDNCSEEMYRLMLQCWKQEPDKRPVFADISKDLEKMMVKRRDYLDLAASTPSDSLIYDDGLSEEETPLVDCNNAPLPRALPSTWIENKLYGMSDPNWPGESPVPLTRADGTNTGFPRYPNDSVYANWMLSPSAAKLMDTFDS"

 
mut <- "MAKATSGAAGLRLLLLLLLPLLGKVALGLYFSRDAYWEKLYVDQAAGTPLLYVHALRDAPEEVPSFRLGQHLYGTYRTRLHENNWICIQEDTGLLYLNRSLDHSSWEKLSVRNRGFPLLTVYLKVFLSPTSLREGECQWPGCARVYFSFFNTSFPACSSLKPRELCFPETRPSFRIRENRPPGTFHQFRLLPVQFLCPNISVAYRLLEGEGLPFRCAPDSLEVSTRWALDREQREKYELVAVCTVHAGAREEVVMVPFPVTVYDEDDSAPTFPAGVDTASAVVEFKRKEDTVVATLRVFDADVVPASGELVRRYTSTLLPGDTWAQQTFRVEHWPNETSVQANGSFVRATVHDYRLVLNRNLSISENRTMQLAVLVNDSDFQGPGAGVLLLHFNVSVLPVSLHLPSTYSLSVSRRARRFAQIGKVCVENCQAFSGINVQYKLHSSGANCSTLGVVTSAEDTSGILFVNDTKALRRPKCAELHYMVVATDQQTSRQAQAQLLVTVEGSYVAEEAGCPLSCAVSKRRLECEECGGLGSPTGRCEWRQGDGKGITRNFSTCSPSTKTCPDGHCDVVETQDINICPQDCLRGSIVGGHEPGEPRGIKAGYGTCNCFPEEEKCFCEPEDIQDPLCDELCRTVIAAAVLFSFIVSVLLSAFCIHCYHKFAHKPPISSAEMTFRRPAQAFPVSYSSSGARRPSLDSMENQVSVDAFKILEDPKWEFPRKNLVLGKTLGEGEFGKVVRYTAFHPKVRAYPEEVAVKMLKENASPSELRDLLSEFNELKQVGHPHRIKLYGACVQDYPLLLYVERGKEGSLRGFLRESRKVGPGYLGSGGSPNSSSLDHPDYRALTMGGLISFAWPRSQGMPGGAEMKLVHRDLAARRILVAEGGKMKISDFGLSRDVYEEDSYVKPSQERPRVKWMAIEVLPDVIYYTQSYVWSPRVLLGEIVTLGGNPYPGIPPVVLFNLLKTGHRMERPDNCSEEMYRLMLQCWKQEPDKRPVFADISKDLEKMMVKRRDYLDLAASTPSDSLIYDDGLSEEETPLVDCNNAPLPRALPSTWIENKLYGMSDPNWPGESPVPLTRADGTNTGFPRYPNDSVYANWMLSPSAAKLMDTFDS"
```

```{r}
compare_sequences <- function(seq1, seq2) {
  # Check that the sequences are the same length
  if (nchar(seq1) != nchar(seq2)) {
    stop("Sequences must be of the same length")
  }

  # Initialize an empty vector to hold the differences
  differences <- c()

  # Iterate over the sequences
  for (i in 1:nchar(seq1)) {
    # Check if the amino acids at position i are the same in both sequences
    if (substr(seq1, i, i) != substr(seq2, i, i)) {
      # If they're not the same, add the difference to the vector
      differences <- c(differences, paste0(substr(seq1, i, i), i, substr(seq2, i, i)))
    }
  }

  # Return the differences
  return(differences)
}
```


```{r}
diff <- compare_sequences(wt, mut)

# Convert differences to a single string
diff_string <- paste(diff, collapse = ", ")

# Print the differences
print(diff_string)
```

# Q4

```{r}
# Read in the tsv files
df1 <- read.delim("mut_RET_GDC_1.tsv", header = TRUE, sep = "\t")
df2 <- read.delim("mut_RET_GDC_2.tsv", header = TRUE, sep = "\t")
df3 <- read.delim("mut_RET_GDC_3.tsv", header = TRUE, sep = "\t")
df4 <- read.delim("mut_RET_GDC_4.tsv", header = TRUE, sep = "\t")

# Merge the data frames
mut_freq_RET <- rbind(df1, df2, df3, df4)
rm(df1, df2, df3, df4)

mut_freq_RET <- mut_freq_RET[,-7]
```

# Q5

```{r}
# install.packages(c("dplyr", "stringr"))
library(dplyr)
library(stringr)

# Assign the last words to be the amino acid change, the second last to region, and the rest to type
mut_freq_RET <- mut_freq_RET %>%
  mutate(
    aa.change = word(Consequences, -1),  # last word
    region = word(Consequences, -2),  # second last word
    type = str_extract(Consequences, ".*(?=\\s\\S+\\s\\S+$)")  
    # everything except the last two words
    ) %>%
  select(-Consequences)


mut_RET <- mut_freq_RET %>%
  filter(type == "Missense") %>%
  arrange(desc(X..Affected.Cases.in.Cohort))
```

# Q7

```{r}
positions <- gsub("[^0-9]", "", diff)

cat(paste(positions, collapse=","))
```

```{r}
pdb_lines <- readLines("./mutant_tumor_alpha_fold/mutant_tumor_7a868_unrelaxed_rank_001_alphafold2_ptm_model_4_seed_000.pdb")

atom_lines <- grep("^ATOM", pdb_lines, value = TRUE)

bfactors <- as.numeric(substr(atom_lines, 61, 66))
residue_numbers <- as.numeric(substr(atom_lines, 23, 26))

positions_bfactor_gt_70 <- unique(residue_numbers[bfactors > 70])

print(positions_bfactor_gt_70)
```

```{r}
surface <- c("740", "741", "746", "748", "751", "752", "753", "754")

intersect(surface, positions_bfactor_gt_70)
```

# Q8

```{r}
library(bio3d)

# Read in the PDB files
pdb1 <- read.pdb("mutant_tumor_alpha_fold/mutant_tumor_7a868_unrelaxed_rank_001_alphafold2_ptm_model_4_seed_000.pdb")
pdb2 <- read.pdb("mutant_tumor_alpha_fold/5fm2.pdb")

# Select C-alpha atoms
ca.inds1 <- atom.select(pdb1, "calpha")
ca.inds2 <- atom.select(pdb2, "calpha")

# Align and calculate RMSD
aln = fit.xyz(fixed = pdb1$xyz, mobile = pdb2$xyz)

# Extract the aligned coordinates
aligned_coords2 <- aln$mobile

# Calculate and print RMSD
rmsd <- rmsd(coords1, aligned_coords2)

print(rmsd)
```



